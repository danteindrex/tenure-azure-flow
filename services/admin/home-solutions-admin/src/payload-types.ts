/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admin: AdminAuthOperations;
  };
  blocks: {};
  collections: {
    admin: Admin;
    member: Member;
    queue: Queue;
    newsfeedpost: Newsfeedpost;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    admin: AdminSelect<false> | AdminSelect<true>;
    member: MemberSelect<false> | MemberSelect<true>;
    queue: QueueSelect<false> | QueueSelect<true>;
    newsfeedpost: NewsfeedpostSelect<false> | NewsfeedpostSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: Admin & {
    collection: 'admin';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin".
 */
export interface Admin {
  id: number;
  role: 'Super Admin' | 'Manager' | 'Support';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Program members who sign up via the frontend
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "member".
 */
export interface Member {
  id: number;
  name: string;
  email: string;
  phone?: string | null;
  street_address?: string | null;
  city?: string | null;
  /**
   * US State code (e.g., CA, NY)
   */
  state?: string | null;
  zip_code?: string | null;
  join_date: string;
  status: 'Active' | 'Inactive' | 'Suspended' | 'Pending';
  /**
   * Current tenure duration in months
   */
  tenure?: number | null;
  /**
   * Administrator managing this member
   */
  admin_i_d_id?: (number | null) | Admin;
  /**
   * Supabase auth user ID (auto-populated on signup)
   */
  auth_user_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Member tenure queue management
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "queue".
 */
export interface Queue {
  id: number;
  memberid: number;
  /**
   * Current position in the tenure queue
   */
  queue_position: number;
  subscription_active?: boolean | null;
  joined_at?: string | null;
  is_eligible?: boolean | null;
  total_months_subscribed?: number | null;
  last_payment_date?: string | null;
  /**
   * Total amount paid over lifetime
   */
  lifetime_payment_total?: number | null;
  has_received_payout?: boolean | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage news feed posts and announcements for members
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsfeedpost".
 */
export interface Newsfeedpost {
  id: number;
  title: string;
  /**
   * Rich text content for the news post
   */
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Admin user who created this post
   */
  admin_i_d_id: number | Admin;
  /**
   * Date and time to publish this post
   */
  publish_date: string;
  /**
   * Current status of the post
   */
  status: 'Draft' | 'Published' | 'Scheduled' | 'Archived';
  /**
   * Priority level for displaying the post
   */
  priority?: ('Low' | 'Normal' | 'High' | 'Urgent') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'admin';
        value: number | Admin;
      } | null)
    | ({
        relationTo: 'member';
        value: number | Member;
      } | null)
    | ({
        relationTo: 'queue';
        value: number | Queue;
      } | null)
    | ({
        relationTo: 'newsfeedpost';
        value: number | Newsfeedpost;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'admin';
    value: number | Admin;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'admin';
    value: number | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin_select".
 */
export interface AdminSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "member_select".
 */
export interface MemberSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  phone?: T;
  street_address?: T;
  city?: T;
  state?: T;
  zip_code?: T;
  join_date?: T;
  status?: T;
  tenure?: T;
  admin_i_d_id?: T;
  auth_user_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "queue_select".
 */
export interface QueueSelect<T extends boolean = true> {
  memberid?: T;
  queue_position?: T;
  subscription_active?: T;
  joined_at?: T;
  is_eligible?: T;
  total_months_subscribed?: T;
  last_payment_date?: T;
  lifetime_payment_total?: T;
  has_received_payout?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsfeedpost_select".
 */
export interface NewsfeedpostSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  admin_i_d_id?: T;
  publish_date?: T;
  status?: T;
  priority?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}